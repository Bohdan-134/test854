*,
*::before,
*::after {
  box-sizing: border-box;
  font-family: "Trebuchet MS", sans-serif;
}

body,
h1, h2, h3, h4, h5, h6,
p, figure,
blockquote, dl, dd {
  margin: 0;
}

ul,
ol {
  list-style: none;
  padding: 0;
  margin: 0;
}

html {
  scroll-behavior: smooth;
  -webkit-text-size-adjust: 100%;
}

body {
  min-height: 100vh;
  text-rendering: optimizeSpeed;
  color: #303030;
  background-color: #F6F7FA;
}

a {
  text-decoration: none;
  color: inherit;
}

button {
  cursor: pointer;
}

img,
picture {
  max-width: 100%;
  display: block;
}

input,
button,
textarea,
select {
  border: none;
  outline: none;
  background: none;
}

a {
  transition: 0.3s;
}
a:hover {
  color: #1A73E8;
}

@font-face {
  font-family: "Trebuchet MS";
  src: url("../fonts/TrebuchetMS.ttf") format("truetype");
  font-weight: 400;
  font-style: normal;
}
@font-face {
  font-family: "Trebuchet MS";
  src: url("../fonts/TrebuchetMS-Bold.ttf") format("truetype");
  font-weight: 700;
  font-style: normal;
}
@font-face {
  font-family: "Trebuchet MS";
  src: url("../fonts/TrebuchetMS-Italic.ttf") format("truetype");
  font-weight: 400;
  font-style: italic;
}
@font-face {
  font-family: "Trebuchet MS";
  src: url("../fonts/Trebuchet-BoldItalic.ttf") format("truetype");
  font-weight: 700;
  font-style: italic;
}
.button {
  position: relative;
  z-index: 1;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: 100%;
}
.button.type1 {
  overflow: hidden;
  padding: 21px 93px;
  border-radius: 10px;
  font-family: "Trebuchet MS", sans-serif;
  font-size: 24px;
  font-weight: 700;
  color: #ffffff;
  box-shadow: 0px 20px 30px rgba(88, 79, 205, 0.2);
}
.button.type1::before, .button.type1::after {
  content: "";
  position: absolute;
  inset: 0;
  z-index: -1;
  transition: 0.5s;
}
.button.type1::before {
  opacity: 1;
  background: linear-gradient(90deg, rgb(87, 77, 204) 0%, rgb(87, 154, 255) 100%);
}
.button.type1::after {
  opacity: 0;
  background: linear-gradient(90deg, rgb(87, 154, 255) 0%, rgb(87, 77, 204) 100%);
}
.button.type1:hover::before {
  opacity: 0;
}
.button.type1:hover::after {
  opacity: 1;
}
@media screen and (max-width: 768px) {
  .button.type1 {
    padding: 17px;
    width: 100%;
    max-width: 260px;
    font-size: 20px;
  }
}
.button.type__login {
  transition: 0.3s;
  padding: 14px 44px;
  border-radius: 10px;
  font-size: 18px;
  font-weight: 400;
  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.05);
  background-color: #ffffff;
  background-clip: text;
  -webkit-background-clip: text;
  color: transparent;
  -webkit-text-fill-color: transparent;
  background-image: linear-gradient(90deg, rgb(87, 77, 204) 0%, rgb(87, 154, 255) 100%);
}
.button.type__login:hover {
  box-shadow: 0px 0px 0px rgba(0, 0, 0, 0);
}
.button.type__sign {
  position: relative;
  z-index: 1;
  background-color: #1A73E8;
  border-radius: 10px;
  font-size: 18px;
  font-weight: 400;
  color: #ffffff;
  text-align: center;
  transition: 0.3s;
}
@media screen and (max-width: 768px) {
  .button.type__sign {
    font-size: 12px;
    border-radius: 6px;
  }
}
.button.type__sign:hover {
  background-color: #1666cf;
}
.button.type__sign span {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  left: 4px;
  width: 54px;
  height: 54px;
  display: block;
  background-color: #ffffff;
  border-radius: 7px;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .button.type__sign span {
    width: 34px;
    height: 34px;
  }
}

.header {
  padding: 48px 40px 0 40px;
  margin: 0 0 76px 0;
}
.header .header-content .btn-wrapper {
  margin: 0 0 0 auto;
}
@media screen and (max-width: 768px) {
  .header {
    display: none;
  }
}

.hero-block {
  height: -moz-fit-content;
  height: fit-content;
  grid-column: 2/span 6;
}
.hero-block .block-content h1 {
  margin: 147px 0 40px 0;
}
@media screen and (max-width: 768px) {
  .hero-block .block-content h1 {
    margin: 0 0 20px 0;
  }
}
@media screen and (max-width: 768px) {
  .hero-block .block-content {
    justify-content: center;
  }
  .hero-block .block-content h1, .hero-block .block-content p {
    text-align: center;
  }
}
@media screen and (max-width: 768px) {
  .hero-block {
    grid-column: 1/-1;
  }
}

.slider-form-block {
  margin: 0 0 128px 0;
  position: relative;
  height: -moz-fit-content;
  height: fit-content;
  display: flex;
  justify-content: flex-end;
  grid-column: 8/span 4;
}
.slider-form-block .block-content {
  padding: 58px 64px;
  background-color: #ffffff;
  border-radius: 30px;
  box-shadow: 0px 10px 40px rgba(0, 0, 0, 0.1);
  width: 100%;
  max-width: 480px;
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .slider-form-block .block-content {
    padding: 30px 36px;
    border-radius: 17px;
  }
}
.slider-form-block .swiper {
  width: 100%;
}
.slider-form-block .swiper-slide.type-login .top-part .form-divider {
  margin: 18px 0 16px 0;
  display: block;
  font-size: 18px;
  font-weight: 400;
  color: #8789A1;
  text-align: center;
}
@media screen and (max-width: 768px) {
  .slider-form-block .swiper-slide.type-login .top-part .form-divider {
    margin: 10px 0 8px 0;
    font-size: 12px;
  }
}
.slider-form-block .swiper-slide.type-login .bottom-part {
  margin: 20px 0 0 0;
}
@media screen and (max-width: 768px) {
  .slider-form-block .swiper-slide.type-login .bottom-part {
    margin: 12px 0 0 0;
  }
}
.slider-form-block .swiper-slide.type-login .bottom-part p {
  text-align: center;
  text-shadow: 0 2px 4px rgba(0, 0, 0, 0.254);
}
@media screen and (max-width: 768px) {
  .slider-form-block .swiper-slide.type-login .bottom-part p {
    font-size: 12px !important;
  }
}
.slider-form-block .swiper-slide.type-login .btn-wrapper {
  width: 100%;
  height: 60px;
}
@media screen and (max-width: 768px) {
  .slider-form-block .swiper-slide.type-login .btn-wrapper {
    height: 39px;
  }
}
.slider-form-block .swiper-slide.type-registration button[type=submit] {
  height: 39px;
  font-size: 14px;
  box-shadow: 0px 4px 10px rgba(88, 81, 207, 0.2);
}
.slider-form-block .swiper-pagination {
  position: static;
  margin: 50px 0 0 0;
  display: flex;
  align-items: center;
  gap: 10px;
}
.slider-form-block .swiper-pagination button {
  width: 30px;
  height: 5px;
  border-radius: 5px;
  background-color: #5893FA;
  opacity: 0.2;
  transition: 0.3s;
}
.slider-form-block .swiper-pagination button.active {
  opacity: 1;
}
@media screen and (max-width: 768px) {
  .slider-form-block {
    margin: 0 0 61px 0;
    grid-column: 1/-1;
    justify-content: center;
  }
}

.swiper.type1 {
  height: 600px;
}
.swiper.type1 .swiper-slide {
  overflow: hidden;
}
.swiper.type1 .swiper-slide img {
  width: 100%;
  height: 100%;
  border-radius: 40px;
  -o-object-fit: cover;
  object-fit: cover;
}
@media screen and (max-width: 768px) {
  .swiper.type1 .swiper-slide img {
    border-radius: 30px;
  }
}
@media screen and (max-width: 768px) {
  .swiper.type1 {
    height: 305px;
  }
}

.section-about-us {
  margin: 176px 0 170px;
}
.section-about-us .section-content {
  padding: 66px 40px 80px 40px;
  background-color: #ffffff;
  border-radius: 60px;
  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .section-about-us .section-content {
    padding: 40px 16px;
    border-radius: 20px;
    box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.05);
  }
}
.section-about-us h2 {
  margin: 0 0 43px 0;
}
@media screen and (max-width: 768px) {
  .section-about-us h2 {
    margin: 0 0 13px 0;
  }
}
.section-about-us p {
  max-width: 650px;
  text-align: center;
}
.section-about-us .btn-wrapper {
  margin: 50px 0 0 0;
  width: 100%;
  max-width: 360px;
}
.section-about-us .btn-wrapper button {
  margin: 0 auto;
}
@media screen and (max-width: 768px) {
  .section-about-us .btn-wrapper {
    margin: 67px 0 0 0;
  }
}
@media screen and (max-width: 768px) {
  .section-about-us {
    margin: 60px 0 55px 0;
  }
}

.section-why-join-us {
  margin: 0 0 170px 0;
}
@media screen and (max-width: 768px) {
  .section-why-join-us {
    margin: 0 0 70px 0;
  }
}
.section-why-join-us .section-content .decor-img {
  margin: 60px 0 0 0;
  display: none;
  width: 100%;
  height: 305px;
  box-shadow: 0px 7.63px 22.88px rgba(0, 0, 0, 0.05);
}
.section-why-join-us .section-content .decor-img img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  border-radius: 30px;
}
@media screen and (max-width: 768px) {
  .section-why-join-us .section-content .decor-img {
    display: block;
  }
}
.section-why-join-us h2 {
  margin: 0 0 46px 0;
  text-align: center;
}
@media screen and (max-width: 768px) {
  .section-why-join-us h2 {
    margin: 0 0 30px 0;
  }
}
.section-why-join-us .why-join-wrapper {
  display: grid;
  grid-template-columns: repeat(3, 1fr);
  gap: 40px;
}
@media screen and (max-width: 1024px) {
  .section-why-join-us .why-join-wrapper {
    grid-template-columns: repeat(2, 1fr);
  }
}
.section-why-join-us .why-join-wrapper .why-join__item {
  background: #ffffff;
  padding: 46px 44px;
  border-radius: 40px;
  box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
  display: flex;
  flex-direction: column;
}
@media screen and (max-width: 768px) {
  .section-why-join-us .why-join-wrapper .why-join__item {
    padding: 28px 25px 55px 25px;
    border-radius: 20px;
  }
}
.section-why-join-us .why-join-wrapper .top-part {
  margin: 0 0 24px 0;
  display: flex;
  align-items: center;
  gap: 12px;
}
.section-why-join-us .why-join-wrapper .top-part h3 {
  font-size: 24px;
  font-weight: 700;
}
@media screen and (max-width: 768px) {
  .section-why-join-us .why-join-wrapper .top-part h3 {
    font-size: 18px;
  }
}
.section-why-join-us .why-join-wrapper .top-part img {
  width: 35px;
  height: 36px;
}
@media screen and (max-width: 768px) {
  .section-why-join-us .why-join-wrapper .top-part img {
    width: 24px;
    height: 24px;
  }
}
@media screen and (max-width: 768px) {
  .section-why-join-us .why-join-wrapper .top-part {
    margin: 0 0 12px 0;
    gap: 10px;
  }
}
.section-why-join-us .why-join-wrapper > :nth-child(1) {
  grid-column: 1/2;
  grid-row: 1;
}
.section-why-join-us .why-join-wrapper > :nth-child(2) {
  grid-column: 2/3;
  grid-row: 1;
}
.section-why-join-us .why-join-wrapper > :nth-child(3) {
  grid-column: 2/3;
  grid-row: 2;
}
@media screen and (max-width: 1024px) {
  .section-why-join-us .why-join-wrapper > :nth-child(3) {
    grid-column: 1/2;
  }
}
.section-why-join-us .why-join-wrapper > :nth-child(4) {
  grid-column: 3/4;
  grid-row: 2;
}
@media screen and (max-width: 1024px) {
  .section-why-join-us .why-join-wrapper > :nth-child(4) {
    grid-column: 2/3;
  }
}
@media screen and (max-width: 768px) {
  .section-why-join-us .why-join-wrapper {
    display: flex !important;
    gap: 0;
    align-items: center;
  }
  .section-why-join-us .swiper-slide {
    width: 100% !important;
    flex-shrink: 0;
  }
}

.section-features {
  margin: 0 0 172px 0;
}
@media screen and (max-width: 768px) {
  .section-features {
    margin: 0 0 57px 0;
  }
}
.section-features .section-content {
  margin: 0 auto;
  max-width: 800px;
}
.section-features h2 {
  text-align: center;
  margin: 0 0 48px 0;
}
@media screen and (max-width: 768px) {
  .section-features h2 {
    margin: 0 0 30px 0;
  }
}
.section-features .features-list {
  display: flex;
  flex-direction: column;
  gap: 10px;
}
@media screen and (max-width: 768px) {
  .section-features .features-list {
    gap: 20px;
  }
}
.section-features .features-item {
  padding: 42px 130px;
  width: 100%;
  background-color: #ffffff;
  border-radius: 30px;
  display: flex;
  align-items: center;
  gap: 20px;
  box-shadow: 0px 10px 30px rgba(0, 0, 0, 0.05);
}
@media screen and (max-width: 768px) {
  .section-features .features-item {
    padding: 40px 30px 32px 30px;
    border-radius: 30px;
    flex-direction: column;
  }
  .section-features .features-item p {
    text-align: center;
  }
}
.section-features .features-item img {
  width: 36px;
  height: 36px;
}

.section-platform-overview .section-content > h2 {
  margin: 0 0 26px 0;
  text-align: center;
}
@media screen and (max-width: 768px) {
  .section-platform-overview .section-content > h2 {
    margin: 0 0 24px 0;
    text-align: start;
  }
}
.section-platform-overview .section-content > p {
  margin: 0 0 38px 0;
  text-align: center;
}
@media screen and (max-width: 768px) {
  .section-platform-overview .section-content > p {
    margin: 0 0 30px 0;
    text-align: start;
  }
}
.section-platform-overview .section-content .platform-swiper {
  height: 410px;
}
@media screen and (max-width: 768px) {
  .section-platform-overview .section-content .platform-swiper {
    height: 305px;
  }
}
.section-platform-overview .section-content .swiper-slide img {
  width: 100%;
  height: 100%;
  -o-object-fit: cover;
  object-fit: cover;
  border-radius: 40px;
}
@media screen and (max-width: 768px) {
  .section-platform-overview .section-content .swiper-slide img {
    border-radius: 40px;
  }
}
.section-platform-overview .section-content .btn-wrapper {
  margin: 60px auto 0;
}
@media screen and (max-width: 768px) {
  .section-platform-overview .section-content .btn-wrapper {
    width: 100%;
    margin: 30px auto 0;
  }
  .section-platform-overview .section-content .btn-wrapper button {
    margin: 0 auto;
  }
}

.section-cta-communication {
  height: 750px;
}
@media screen and (max-width: 768px) {
  .section-cta-communication {
    margin: 0 -20px;
    width: calc(100% + 40px) !important;
  }
}
.section-cta-communication .left-part {
  margin: 176px 0 0 0;
  width: 100%;
  max-width: 790px;
  display: flex;
  flex-direction: column;
}
@media screen and (max-width: 768px) {
  .section-cta-communication .left-part {
    padding: 0 0 0 20px;
    margin: 341px 0 0 0;
    max-width: calc(100% - 20px);
  }
  .section-cta-communication .left-part h2 {
    margin: 53px 0 14px 0;
    order: 2;
  }
  .section-cta-communication .left-part .btn-wrapper {
    order: 1;
    width: 100%;
  }
  .section-cta-communication .left-part .btn-wrapper button {
    max-width: none;
  }
}
.section-cta-communication .left-part p {
  margin: 32px 0 36px 0;
}
@media screen and (max-width: 768px) {
  .section-cta-communication .left-part p {
    margin: 0;
    order: 3;
  }
}
.section-cta-communication .right-part picture {
  position: absolute;
  z-index: -1;
  bottom: 0;
  right: -120px;
  display: flex;
  max-width: 815px;
}
@media screen and (max-width: 1200px) {
  .section-cta-communication .right-part picture {
    opacity: 0.3;
  }
}
@media screen and (max-width: 768px) {
  .section-cta-communication .right-part picture {
    opacity: 1;
    height: 630px;
    width: 650px;
    right: -150px;
    bottom: auto;
    top: -94px;
  }
}
.section-cta-communication .right-part picture img {
  width: 100%;
  height: 100%;
}

.footer {
  padding: 103px 40px 90px 40px;
  background-color: #ffffff;
}
.footer .footer-content {
  display: flex;
  justify-content: space-between;
  align-items: flex-start;
  gap: 100px;
}
@media screen and (max-width: 768px) {
  .footer .footer-content {
    flex-direction: column;
    gap: 30px;
  }
}
.footer .footer-info__list li:not(:last-child) {
  margin: 0 0 22px 0;
}
@media screen and (max-width: 768px) {
  .footer .footer-info__list li:not(:last-child) {
    margin: 0 0 10px 0;
  }
}
.footer .footer-navigation {
  display: flex;
  gap: 145px;
  flex-wrap: wrap;
}
@media screen and (max-width: 768px) {
  .footer .footer-navigation {
    flex-direction: column;
    gap: 30px;
  }
}
.footer .footer-navigation .list li:first-child {
  font-size: 22px;
  font-weight: 600;
  margin: 0 0 40px 0;
}
@media screen and (max-width: 768px) {
  .footer .footer-navigation .list li:first-child {
    font-size: 16px;
    margin: 0 0 12px 0;
  }
}
.footer .footer-navigation .list li:not(:first-child):not(:last-child) {
  margin: 0 0 20px 0;
}
@media screen and (max-width: 768px) {
  .footer .footer-navigation .list li:not(:first-child):not(:last-child) {
    margin: 0 0 11px 0;
  }
}
@media screen and (max-width: 768px) {
  .footer {
    padding: 52px 20px;
  }
}

body {
  display: flex;
  flex-direction: column;
}

main {
  position: relative;
  z-index: 1;
  overflow: hidden;
  padding: 0 40px;
  flex: 1;
  display: grid;
  grid-template-columns: 1fr repeat(10, minmax(0, 135px)) 1fr;
}
main::before {
  content: "";
  position: absolute;
  top: 322px;
  right: -258px;
  width: 100%;
  height: 3345px;
  background: url(../images/bg-desctop.webp);
  background-repeat: no-repeat;
  background-size: 100%;
}
@media screen and (max-width: 768px) {
  main::before {
    background: url(../images/bg-mobile.webp);
    background-repeat: no-repeat;
    background-size: 100%;
    height: 2075px;
    width: 405px;
    right: auto;
    top: auto;
    left: 50%;
    transform: translateX(-50%);
    bottom: 74px;
  }
}
@media screen and (max-width: 768px) {
  main {
    padding: 93px 20px 60px 20px;
    display: flex;
    flex-direction: column;
  }
  main .hero-block {
    order: 1;
  }
  main .section-cta-communication {
    order: 2;
  }
  main .slider-form-block {
    order: 3;
  }
  main .section:has(.swiper.type1) {
    order: 4;
  }
  main .section-about-us {
    order: 5;
  }
  main .section-why-join-us {
    order: 6;
  }
  main .section-features {
    order: 7;
  }
  main .section-platform-overview {
    order: 8;
  }
}

section {
  position: relative;
  z-index: 1;
}
section.type-full {
  margin: 0 -40px;
  width: calc(100% + 80px);
  grid-column: 1/-1;
}
@media screen and (max-width: 768px) {
  section.type-full {
    margin: 0px;
    width: 100%;
  }
}
section.type-default {
  width: 100%;
  grid-column: 2/12;
}

.header-content,
.section-content,
.footer-content,
.block-content,
.slide-content {
  width: 100%;
}

.container {
  margin: 0 auto;
  width: 100%;
}
.container.type-default {
  max-width: 1350px;
}

.title.type-main {
  font-size: 56px;
  font-weight: 700;
}
@media screen and (max-width: 768px) {
  .title.type-main {
    font-size: 24px;
  }
}

.text.type-main {
  font-size: 24px;
  font-weight: 400;
}
@media screen and (max-width: 768px) {
  .text.type-main {
    font-size: 16px;
  }
}
.text.type-xs {
  font-size: 18px;
  font-weight: 400;
}
@media screen and (max-width: 768px) {
  .text.type-xs {
    font-size: 16px;
  }
}
.text.type2 {
  font-family: "Cera Round Pro DEMO", sans-serif;
  font-size: 14px;
  font-weight: 400;
  color: #595B75;
}

.btn-wrapper {
  width: -moz-fit-content;
  width: fit-content;
}

.link {
  display: inline-block;
}
.link.type-default {
  font-size: 22px;
  font-weight: 400;
}
@media screen and (max-width: 768px) {
  .link.type-default {
    font-size: 16px;
  }
}

.form.type1 {
  display: flex;
  flex-direction: column;
  gap: 27px;
}
@media screen and (max-width: 768px) {
  .form.type1 {
    gap: 20px;
  }
}
.form.type1 .form-group {
  display: flex;
  flex-direction: column;
  gap: 12px;
}
@media screen and (max-width: 768px) {
  .form.type1 .form-group {
    gap: 7px;
  }
  .form.type1 .form-group label {
    font-size: 12px !important;
  }
}
.form.type1 .form-input-wrapper {
  position: relative;
  z-index: 1;
}
.form.type1 .form-input-wrapper .toggle-password {
  position: absolute;
  z-index: 2;
  top: 50%;
  transform: translateY(-50%);
  right: 17px;
  background-color: transparent;
  display: flex;
  justify-content: center;
  align-items: center;
}
@media screen and (max-width: 768px) {
  .form.type1 .form-input-wrapper .toggle-password {
    right: 5px;
  }
}
.form.type1 .form-input-wrapper .toggle-password svg path {
  transition: 0.3s;
}
@media screen and (max-width: 768px) {
  .form.type1 .form-input-wrapper .toggle-password svg {
    width: 15px;
    height: 10px;
  }
}
.form.type1 .form-input-wrapper .toggle-password:hover svg path {
  stroke: #303030;
}
.form.type1 input:not([type=checkbox]) {
  padding: 20px;
  width: 100%;
  height: 60px;
  background-color: #F5F7F9;
  border-radius: 10px;
  outline: none;
  font-size: 18px;
  transition: 0.3s;
}
@media screen and (max-width: 768px) {
  .form.type1 input:not([type=checkbox]) {
    height: 35px;
    padding: 12px;
    border-radius: 6px;
    font-size: 12px;
  }
}
.form.type1 input:not([type=checkbox]):focus {
  background-color: #e5e9ed;
}
.form.type1 input:not([type=checkbox])::-moz-placeholder {
  color: #8789A1;
}
.form.type1 input:not([type=checkbox])::placeholder {
  color: #8789A1;
}
.form.type1 .gender-select {
  display: flex;
  gap: 1px;
  width: 100%;
  height: 60px;
}
@media screen and (max-width: 768px) {
  .form.type1 .gender-select {
    height: 35px;
  }
}
.form.type1 .gender-select button {
  flex: 1;
  background-color: #F5F7F9;
  height: 100%;
  font-size: 18px;
  font-weight: 400;
  color: #8789A1;
  transition: 0.3s;
}
@media screen and (max-width: 768px) {
  .form.type1 .gender-select button {
    font-size: 12px;
  }
}
.form.type1 .gender-select button.active {
  background-color: #1A73E8;
  color: #ffffff;
}
.form.type1 .gender-select button.active:hover {
  background-color: #1A73E8;
  color: #ffffff;
}
.form.type1 .gender-select button:hover {
  background-color: #d8dde2;
}
.form.type1 .gender-select button:first-child {
  border-radius: 6px 0 0 6px;
}
.form.type1 .gender-select button:last-child {
  border-radius: 0 6px 6px 0;
}
.form.type1 .checkbox-group {
  flex-direction: row;
  align-items: flex-start;
  gap: 13px;
}
.form.type1 .checkbox-group label {
  color: #8789A1;
}
.form.type1 #terms {
  appearance: none;
  -webkit-appearance: none;
  -moz-appearance: none;
  width: 25px;
  min-width: 25px;
  height: 25px;
  border-radius: 3px;
  background-color: #F5F7F9;
  cursor: pointer;
  position: relative;
  display: inline-block;
  vertical-align: middle;
  transition: 0.2s;
}
@media screen and (max-width: 768px) {
  .form.type1 #terms {
    width: 17px;
    min-width: 17px;
    height: 17px;
  }
}
.form.type1 #terms:checked {
  background-color: #4a74ff;
}
.form.type1 #terms:checked::after {
  content: "";
  position: absolute;
  left: 50%;
  top: 50%;
  transform: translate(-50%, -50%) rotate(45deg);
  width: 5px;
  height: 10px;
  border: solid white;
  border-width: 0 2px 2px 0;
}
@media screen and (max-width: 768px) {
  .form.type1 #terms:checked::after {
    top: 46%;
  }
}
/*# sourceMappingURL=data:application/json;charset=utf8;base64, */
